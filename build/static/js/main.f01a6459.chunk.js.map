{"version":3,"sources":["Fetch.js","useFetch.js","components/CharacterCard/index.js","helpers/names.js","hooks/useCard.js","components/NameList/index.js","components/SearchBar/index.js","hooks/useDebouncedSearch.js","img/starwars.jpg","App.js","index.js"],"names":["Fetch","uri","renderSuccess","loadingFallback","renderError","error","JSON","stringify","useState","data","setData","setError","loading","setLoading","useEffect","fetch","then","json","catch","useFetch","HtmlTooltip","styled","className","props","Tooltip","classes","popper","followCursor","theme","tooltipClasses","tooltip","backgroundColor","color","maxWidth","fontSize","typography","pxToRem","border","CharacterTemplate","characterData","characterDetails","filmsDetails","speciesDetails","planetDetails","card","CardContent","Typography","sx","gutterBottom","variant","component","name","mb","height","mass","hair_color","skin_color","gender","birth_year","age","ml","mr","Divider","CardActions","title","map","film","director","release_date","Button","mt","population","terrain","average_lifespan","classification","language","minWidth","padding","Card","CharacterCard","characterId","namesArray","CardIDContext","createContext","useCardId","useContext","CardProvider","children","cardID","setCardID","Provider","value","setCardData","id","isNaN","parseInt","isValidInput","getCardData","SelectedListItem","React","selectedIndex","setSelectedIndex","width","maxHeight","overflow","List","item","index","ListItemButton","selected","onClick","characterIndex","listIndex","ListItemText","primary","SearchBar","searchFunction","inputText","setInputText","debouncedSearchFunction","useConstant","AwesomeDebouncePromise","searchResults","useAsync","a","length","useDebouncedSearch","text","style","background","borderRadius","placeholder","onChange","e","target","message","LayoutStyling","backgroundImg","margin","fontFamily","App","characterID","textAlign","marginBottom","Box","display","flexDirection","xs","md","alignItems","bgcolor","boxShadow","fontWeight","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f01a6459.chunk.js","sourcesContent":["import React from \"react\";\nimport useFetch from \"./useFetch\";\n\nexport default function Fetch({\n  uri, \n  renderSuccess,\n  loadingFallback = <p>loading...</p>,\n  renderError = error => (\n    <pre>{JSON.stringify(error, null, 2)}</pre>\n  )\n}) {\n  const { loading, data, error } = useFetch(uri);\n  if (loading) return loadingFallback;\n  if (error) return renderError(error);\n  if (data) return renderSuccess({ data });\n}","import { useState, useEffect } from \"react\";\n/* A fetch hook that deals with all three states of a request */\nexport default function useFetch(uri) {\n  const [data, setData] = useState();\n  const [error, setError] = useState();\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    if (!uri) return;\n    fetch(uri)\n      .then(data => data.json())\n      .then(setData) //it's implicit that setData uses data as it's argument, because that's how .then() works (see promises)\n      .then(() => setLoading(false))\n      .catch(setError);\n  }, [uri]);\n\n  return {\n    loading,\n    data,\n    error\n  };\n}","import React from \"react\";\nimport Fetch from \"../../Fetch\";\n\nimport Box from \"@mui/material/Box\";\nimport Card from \"@mui/material/Card\";\nimport CardActions from \"@mui/material/CardActions\";\nimport CardContent from \"@mui/material/CardContent\";\nimport { Button } from \"@mui/material\";\nimport Divider from \"@mui/material/Divider\";\nimport { styled } from \"@mui/material/styles\";\nimport Typography from \"@mui/material/Typography\";\nimport Tooltip, { tooltipClasses } from \"@mui/material/Tooltip\";\n\nconst HtmlTooltip = styled(({ className, ...props }) => (\n  <Tooltip {...props} classes={{ popper: className }} followCursor />\n))(({ theme }) => ({\n  [`& .${tooltipClasses.tooltip}`]: {\n    backgroundColor: \"#f5f5f9\",\n    color: \"rgba(0, 0, 0, 0.87)\",\n    maxWidth: 300,\n    fontSize: theme.typography.pxToRem(12),\n    border: \"1px solid #dadde9\",\n  },\n}));\n\nconst CharacterCard = ({ characterId }) => {\n  return (\n    <div>\n      {!characterId ? null : (\n        <Fetch\n          uri={`/starWarsAPI/${characterId}`}\n          renderSuccess={CharacterTemplate}\n        />\n      )}\n    </div>\n  );\n};\n\nfunction CharacterTemplate(characterData) {\n  const characterDetails = characterData.data;\n  const { filmsDetails, speciesDetails, planetDetails } = characterDetails;\n  const card = (\n    <>\n      <CardContent>\n        <Typography\n          sx={{ fontSize: 14 }}\n          color=\"text.secondary\"\n          gutterBottom\n        ></Typography>\n        <Typography variant=\"h5\" component=\"div\">\n          {characterDetails.name}\n        </Typography>\n        <Typography sx={{ mb: 0.5 }} color=\"text.secondary\">\n          Height: {characterDetails.height}\n        </Typography>\n        <Typography sx={{ mb: 0.5 }} color=\"text.secondary\">\n          Weight: {characterDetails.mass}kg\n        </Typography>\n        <Typography sx={{ mb: 0.5 }} color=\"text.secondary\">\n          Hair Colour: {characterDetails.hair_color}\n        </Typography>\n        <Typography sx={{ mb: 0.5 }} color=\"text.secondary\">\n          Skin Colour: {characterDetails.skin_color}\n        </Typography>\n        <Typography sx={{ mb: 0.5 }} color=\"text.secondary\">\n          Gender: {characterDetails.gender}\n        </Typography>\n        <Typography color=\"text.secondary\">\n          YOB: {characterDetails.birth_year}\n        </Typography>\n\n        <Typography variant=\"body2\">\n          <br />\n          {characterDetails.age}\n        </Typography>\n      </CardContent>\n      <Typography sx={{ mb: 0.5, ml: 0.5, mr: 0.5 }} color=\"text.secondary\">\n        Hover over the words below to get more info...\n      </Typography>\n      <Divider />\n      <CardActions>\n        {!characterDetails ? null : (\n          <HtmlTooltip\n            title={\n              <>\n                <Typography variant=\"h5\" color=\"inherit\">\n                  Movie Details\n                </Typography>\n                {\"Here are the movies featuring\"} <b>{characterDetails.name}</b>{\" \"}\n                {filmsDetails.map((film) => (\n                  <>\n                    <h3 key={film.title}>{film.title}</h3>\n\n                    <Typography sx={{ mb: 0.5 }} color=\"text.secondary\">\n                      Director: {film.director}\n                    </Typography>\n                    <Typography sx={{ mb: 0.5 }} color=\"text.secondary\">\n                      Release Date: {film.release_date}\n                    </Typography>\n                  </>\n                ))}\n              </>\n            }\n          >\n            <Button>Films</Button>\n          </HtmlTooltip>\n        )}\n        {!planetDetails ? null : (\n          <HtmlTooltip\n            title={\n              <>\n                <Typography variant=\"h5\" color=\"inherit\">\n                  {planetDetails.name}\n                </Typography>\n                {\"Home planet\"} of <b>{characterDetails.name}</b>{\" \"}\n                <>\n                  <Typography sx={{ mb: 0.5, mt: 1 }} color=\"text.secondary\">\n                    Population: {planetDetails.population}\n                  </Typography>\n                  <Typography sx={{ mb: 0.5 }} color=\"text.secondary\">\n                    Terrain: {planetDetails.terrain}\n                  </Typography>\n                </>\n              </>\n            }\n          >\n            <Button>Homeworld</Button>\n          </HtmlTooltip>\n        )}\n        {!speciesDetails ? null : (\n          <HtmlTooltip\n            title={\n              <>\n                <Typography variant=\"h5\" color=\"inherit\">\n                  {speciesDetails.name}\n                </Typography>\n                {\"The race of which\"} <b>{characterDetails.name}</b>\n                {\" is a member\"}\n                <>\n                  <Typography sx={{ mb: 0.5, mt: 1 }} color=\"text.secondary\">\n                    Avg. Lifespan: {speciesDetails.average_lifespan}\n                  </Typography>\n                  <Typography sx={{ mb: 0.5 }} color=\"text.secondary\">\n                    Classification: {speciesDetails.classification}\n                  </Typography>\n                  <Typography sx={{ mb: 0.5 }} color=\"text.secondary\">\n                    Language: {speciesDetails.language}\n                  </Typography>\n                </>\n              </>\n            }\n          >\n            <Button>Species</Button>\n          </HtmlTooltip>\n        )}\n      </CardActions>\n    </>\n  );\n\n  return (\n    <Box sx={{ minWidth: 275, padding: 23 }}>\n      <Card variant=\"outlined\">{card}</Card>\n    </Box>\n  );\n}\n\nexport default CharacterCard;\n","export const namesArray = [\n[1, \"Luke Skywalker\"], \n[2, \"C-3PO\"],\n[3, \"R2-D2\"],\n[4, \"Darth Vader\"],\n[5, \"Leia Organa\"],\n[6, \"Owen Lars\"],\n[7, \"Beru Whitesun lars\"],\n[8, \"R5-D4\"],\n[9, \"Biggs Darklighter\"],\n[10, \"Obi-Wan Kenobi\"],\n\n[11, \"Anakin Skywalker\"],\n[12, \"Wilhuff Tarkin\"],\n[13, \"Chewbacca\"],\n[14, \"Han Solo\"],\n[15, \"Greedo\"],\n[16, \"Jabba Desilijic Tiure\"],\n[18, \"Wedge Antilles\"],\n[19, \"Jek Tono Porkins\"],\n[20, \"Yoda\"],\n[21, \"Palpatine\"],\n[22, \"Boba Fett\"],\n[23, \"IG-88\"],\n[24, \"Bossk\"],\n[25, \"Lando Calrissian\"],\n[26, \"Lobot\"],\n[27, \"Ackbar\"],\n[28, \"Mon Mothma\"],\n[29, \"Arvel Crynyd\"],\n[30, \"Wicket Systri Warrick\"],\n[31, \"Nien Nunb\"],\n[32, \"Qui-Gon Jinn\"],\n[33, \"Nute Gunray\"],\n[34, \"Finis Valorum\"],\n[35, \"Padmé Amidala\"],\n[36, \"Jar Jar Binks\"],\n[37, \"Roos Tarpals\"],\n[38, \"Rugor Nass\"],\n[39, \"Ric Olié\"],\n[40, \"Watto\"],\n[41, \"Sebulba\"],\n[42, \"Quarsh Panaka\"],\n[43, \"Shmi Skywalker\"],\n[44, \"Darth Maul\"],\n[45, \"Bib Fortuna\"],\n[46, \"Ayla Secura\"],\n[47, \"Ratts Tyerel\"],\n[48, \"Dud Bolt\"],\n[49, \"Gasgano\"],\n[50, \"Ben Quadinaros\"],\n[51, \"Mace Windu\"],\n[52, \"Ki-Adi-Mundi\"],\n[53, \"Kit Fisto\"],\n[54, \"Eeth Koth\"],\n[55, \"Adi Gallia\"],\n[56, \"Saesee Tiin\"],\n[57, \"Yarael Poof\"],\n[58, \"Plo Koon\"],\n[59, \"Mas Amedda\"],\n[60, \"Gregar Typho\"],\n[61, \"Cordé\"],\n[62, \"Cliegg Lars\"],\n[63, \"Poggle the Lesser\"],\n[64, \"Luminara Unduli\"],\n[65, \"Barriss Offee\"],\n[66, \"Dormé\"],\n[67, \"Dooku\"],\n[68, \"Bail Prestor Organa\"],\n[69, \"Jango Fett\"],\n[70, \"Zam Wesell\"],\n[71, \"Dexter Jettster\"],\n[72, \"Lama Su\"],\n[73, \"Taun We\"],\n[74, \"Jocasta Nu\"],\n[75, \"R4-P77\"],\n[76, \"Wat Tambor\"],\n[77, \"San Hill\"],\n[78, \"Shaak Ti\"],\n[79, \"Grievous\"],\n[80, \"Tarfful\"],\n[81, \"Raymus Antilles\"],\n[82, \"Sly Moore\"],\n[83, \"Tion Medon\"],\n]\n\n\n\n\n\n\n","import React, { createContext, useState, useContext } from \"react\";\n\n// The purpose of this shared context is to allow the changing, from multiple components (List, SearchBox),\n// of the id used for fetching a single character's info\n\nconst CardIDContext = createContext();\n\nexport const useCardId = () => useContext(CardIDContext);\n\nexport function CardProvider({ children }) {\n  // store cardID as a string but do a simple parseInt to make sure it's an int\n  const [cardID, setCardID] = useState(1);\n  const isValidInput = (id) => {\n    if (isNaN(parseInt(id)) || id === cardID) {\n      return false;\n    } else {\n      return true;\n    } \n  };\n  const setCardData = (id) => {\n    if (!isValidInput(id)) return;\n    setCardID(id);\n  };\n  const getCardData = () => cardID\n\n  return (\n    <CardIDContext.Provider value={{ setCardData, getCardData }}>\n      {children}\n    </CardIDContext.Provider>\n  );\n}\n","import React from \"react\";\nimport { namesArray } from \"../../helpers/names\";\nimport Box from \"@mui/material/Box\";\nimport List from \"@mui/material/List\";\nimport ListItemButton from \"@mui/material/ListItemButton\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport { useCardId } from \"../../hooks/useCard\";\n\nexport default function SelectedListItem() {\n  const [selectedIndex, setSelectedIndex] = React.useState(1);\n  const { setCardData } = useCardId(1);\n  const handleListItemClick = (characterIndex, listIndex) => {\n    setCardData(characterIndex);\n    setSelectedIndex(listIndex);\n    // from here, the cardID context will update the\n    // characterCard ID which will cause the context children\n    // (importantly, the card) to rerender\n    \n  };\n\n  return (\n    <Box\n      sx={{\n        width: \"35%\",\n        maxWidth: 360,\n        backgroundColor: \"white\",\n        maxHeight: \"500px\",\n        overflow: \"auto\",\n      }}\n    >\n      <List component=\"nav\">\n        {!namesArray\n          ? null\n          : namesArray.map((item, index) => {\n              return (\n                <ListItemButton\n                  sx={{\n                    width: \"100%\",\n                    maxWidth: 360,\n                    backgroundColor: \"white\",\n                  }}\n                  key={index}\n                  selected={selectedIndex === index + 1}\n                  onClick={() => handleListItemClick(namesArray[index][0], index+1)}\n                >\n                  <ListItemText primary={item[1]} />\n                </ListItemButton>\n              );\n            })}\n      </List>\n    </Box>\n  );\n}\n","import React from 'react';\nimport { useCardId } from '../../hooks/useCard';\nimport { useDebouncedSearch } from '../../hooks/useDebouncedSearch';\n\n\nconst SearchBar = () => {\n  const {setCardData} = useCardId()\n  const useSearchStarwarsHero = () => useDebouncedSearch(text => setCardData(text))\n  const { inputText, setInputText, searchResults } = useSearchStarwarsHero();\n  const BarStyling = {width:\"20rem\",background:\"#F2F1F9\", border:\"#93E9BE 2px inset\", padding:\"0.5rem\", borderRadius: '4px'};\n  return (\n    <>\n    <input \n     style={BarStyling}\n     value={inputText}\n     placeholder={\"Search character by ID\"}\n     onChange={(e) => setInputText(e.target.value)}\n    />\n    <p style={{color: 'white'}}>\n      {searchResults.loading && 'Processing input...'}\n      {searchResults.error && 'Error: ' && searchResults.error.message}\n    </p>\n    </>\n  );\n}\n\nexport default SearchBar\n","// Generic reusable hook\n\nimport AwesomeDebouncePromise from 'awesome-debounce-promise'\nimport {useState} from 'react'\nimport useConstant from 'use-constant'\nimport {useAsync} from 'react-async-hook';\n\nexport const useDebouncedSearch = (searchFunction) => {\n\n  // Handle the input text state\n  const [inputText, setInputText] = useState('');\n\n  // Debounce the original search async function\n  const debouncedSearchFunction = useConstant(() =>\n    AwesomeDebouncePromise(searchFunction, 300)\n  );\n\n  // The async callback is run each time the text changes,\n  // but as the search function is debounced, it does not\n  // fire a new request on each keystroke\n  const searchResults = useAsync(\n    async () => {\n      if (inputText.length === 0) {\n        return [];\n      } else {\n        return debouncedSearchFunction(inputText);\n      }\n    },\n    [debouncedSearchFunction, inputText]\n  );\n\n  // Return everything needed for the hook consumer\n  return {\n    inputText,\n    setInputText,\n    searchResults,\n  };\n};","export default __webpack_public_path__ + \"static/media/starwars.9c0fe0b8.jpg\";","import { Box } from \"@mui/system\";\nimport \"./App.css\";\nimport CharacterCard from \"./components/CharacterCard\";\nimport NameList from \"./components/NameList\";\nimport SearchBar from \"./components/SearchBar\";\nimport { useCardId } from \"./hooks/useCard\";\nimport backgroundImg from \"./img/starwars.jpg\";\n\nconst LayoutStyling = {\n  width: \"1440px\",\n  background: `url(${backgroundImg})`,\n  border: \"none\",\n  padding: \"0.5rem\",\n  margin: \"auto\",\n  fontFamily: 'Share Tech Mono, monospace'\n};\n\nfunction App() {\n  const { getCardData } = useCardId();\n  const characterID = getCardData() ?? 1;\n  const headerStyles = {\n    width: \"1440px\",\n    color: \"white\",\n    textAlign: \"center\",\n    marginBottom: \"4rem\",\n    fontFamily: \"Audiowide, cursive\",\n    fontSize: 50,\n  };\n  return (\n    <div style={LayoutStyling}>\n      <h1 style={headerStyles}>Star Wars Character Explorer</h1>\n      <SearchBar />\n      <Box\n        sx={{\n          display: \"flex\",\n          flexDirection: { xs: \"column\", md: \"row\" },\n          alignItems: \"center\",\n          bgcolor: \"background.paper\",\n          overflow: \"hidden\",\n          borderRadius: \"12px\",\n          boxShadow: 4,\n          fontWeight: \"bold\",\n        }}\n      >\n        <NameList />\n        <CharacterCard characterId={characterID ?? 1} />\n      </Box>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport  {CardProvider}  from './hooks/useCard';\n\nReactDOM.render(\n  <CardProvider>\n    <App />\n  </CardProvider>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}